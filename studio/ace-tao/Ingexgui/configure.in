AC_INIT(src/ingexgui.cpp)
AM_INIT_AUTOMAKE(ingexgui, 0.1)

AC_PROG_CXX
AC_PROG_INSTALL
AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

CPPFLAGS="$CPPFLAGS -Wall -g -fexceptions"
CXXFLAGS="$CXXFLAGS -Wall -g -fexceptions"

WXCONFIG=wx-config
AC_ARG_WITH(wx-config,
[[  --with-wx-config=FILE     Use the given path to wx-config when determining
                            wxWidgets configuration; defaults to "wx-config"]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        WXCONFIG=$withval
    fi
])

wxversion=0

AC_DEFUN([WXTEST],
[
	AC_REQUIRE([AC_PROG_AWK])
	AC_MSG_CHECKING([wxWidgets version])
	if wxversion=`$WXCONFIG --version`; then
		AC_MSG_RESULT([$wxversion])
	else
		AC_MSG_RESULT([not found])
		AC_MSG_ERROR([wxWidgets is required. Try --with-wx-config.])
	fi])

# Call WXTEST func
WXTEST

# Verify minimus requires
vers=`echo $wxversion | $AWK 'BEGIN { FS = "."; } { printf "% d", ($1 * 1000 + $2) * 1000 + $3;}'`
if test -n "$vers" && test "$vers" -ge 2003003; then
	WX_CPPFLAGS="`$WXCONFIG --cppflags`"
	WX_CXXFLAGS="`$WXCONFIG --cxxflags | sed -e 's/-fno-exceptions//'`"
	WX_LIBS="`$WXCONFIG --libs`"
else
	AC_MSG_ERROR([wxWidgets 2.3.3 or newer is required])
fi


AC_DEFUN([PLAYERTEST],
[
	INGEXROOT=`pwd | sed 's/\(.*\)\/studio\/ace-tao\/Ingexgui.*\?/\1/'`
	PLAYERLIB="libIngexPlayer.a"
	AC_MSG_CHECKING([for $PLAYERLIB])
	if test -f "$INGEXROOT/player/IngexPlayer/$PLAYERLIB"; then
		AC_MSG_RESULT([yes])
		AC_MSG_CHECKING([player for DVS card support])
		if test `readelf -s $INGEXROOT/player/IngexPlayer/$PLAYERLIB | grep -c dvs_register_listener` -gt 0; then
			AC_MSG_RESULT([yes])
			DVS_CPPFLAGS="-DHAVE_DVS"
			AC_MSG_CHECKING([for DVSSDK variable])
			if test -n "$DVSSDK"; then
				AC_MSG_RESULT([yes])
				DVS_LDFLAGS="-L$DVSSDK/linux-x86/lib -L$DVSSDK/linux-x86_64/lib -ldvsoem"
			else
				AC_MSG_RESULT([no])
				AC_MSG_WARN([You need to define the DVSSDK environment variable before you build the project.])
			fi
		else
			AC_MSG_RESULT([no])
		fi
	else
		AC_MSG_RESULT([no])
		AC_MSG_ERROR([You need to build the Ingex Player first.])
	fi
])

#Call PLAYERTEST func
PLAYERTEST

AC_DEFUN([ACETAOTEST],
[
	AC_MSG_CHECKING([for ACE_ROOT and TAO_ROOT variables])
	if test -n "$ACE_ROOT" && test -n "$TAO_ROOT"; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		AC_MSG_WARN([You need to define ACE_ROOT and TAO_ROOT environment variables before you build the project.])
	fi
	IDLLOC=`pwd | sed 's/\(.*\)\/Ingexgui.*\?/\1\/IDL/'`
	IDLLIB="libidl.a"
	AC_MSG_CHECKING([for $IDLLIB])
	if test -f "$IDLLOC/$IDLLIB"; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		AC_MSG_ERROR([You need to build the IDL library first.])
	fi
])

#call ACETAOTEST func
ACETAOTEST

CPPFLAGS="$CPPFLAGS $WX_CPPFLAGS $DVS_CPPFLAGS -I$ACE_ROOT -I$TAO_ROOT -I$TAO_ROOT/orbsvcs -I$IDLLOC/Generated -I$INGEXROOT/player/ingex_player -I$INGEXROOT/player/IngexPlayer"
CXXFLAGS="$CXXFLAGS $WX_CPPFLAGS"
LDFLAGS="$LDFLAGS -L$ACE_ROOT/lib -lTAO -lACE -lTAO_CosNaming -lTAO_PortableServer -lTAO_AnyTypeCode -lTAO_Valuetype -lTAO_Messaging -lTAO_PI -lTAO_CodecFactory -L$IDLLOC $IDLLOC/$IDLLIB -L/usr/X11R6/lib $INGEXROOT/player/IngexPlayer/$PLAYERLIB $INGEXROOT/common/libcommon.a $INGEXROOT/common/YUVlib/libYUVlib.a -lX11 -lXv -lpthread -lfreetype -lfontconfig -luuid -ld3mxfinfo -lMXFReader -lMXF -lavformat -lavcodec -lavutil -lmp3lame -lx264 -la52 -lfaac -lfaad -lbz2 -lportaudio $DVS_LDFLAGS"

AC_SUBST(WX_LIBS)

AC_OUTPUT(Makefile src/Makefile)
