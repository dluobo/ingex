#include <cstdio>
#include "MaterialResolution.h"

const char * const VR_FMT = "INSERT INTO VideoResolution (vrn_identifier, vrn_name) VALUES (%d, '%s');\n";
const char * const FF_FMT = "INSERT INTO FileFormat (fft_identifier, fft_name) VALUES (%d, '%s');\n";
const char * const OP_FMT = "INSERT INTO OperationalPattern (opp_identifier, opp_name) VALUES (%d, '%s');\n";

namespace
{
void print_vr(MaterialResolution::EnumType res)
{
    fprintf(stdout, VR_FMT, res, MaterialResolution::Name(res).c_str());
}
void print_ff(FileFormat::EnumType ff)
{
    fprintf(stdout, FF_FMT, ff, FileFormat::Name(ff).c_str());
}
void print_op(OperationalPattern::EnumType op)
{
    fprintf(stdout, OP_FMT, op, OperationalPattern::Name(op).c_str());
}
}

int main (int argc, char * argv[])
{
    fprintf(stdout, "-- Section generated by database/src/generate_resolution_sql\n\n");

    // VideoResolution
    print_vr(MaterialResolution::UNC_RAW);
    print_vr(MaterialResolution::UNC_MXF_ATOM);
    print_vr(MaterialResolution::DV25_RAW);
    print_vr(MaterialResolution::DV25_MXF_ATOM);
    print_vr(MaterialResolution::DV25_MOV);
    print_vr(MaterialResolution::DV50_RAW);
    print_vr(MaterialResolution::DV50_MXF_ATOM);
    print_vr(MaterialResolution::DV50_MOV);
    print_vr(MaterialResolution::DV100_RAW);
    print_vr(MaterialResolution::DV100_MXF_ATOM);
    print_vr(MaterialResolution::DV100_MOV);
    print_vr(MaterialResolution::MJPEG21_MXF_ATOM);
    print_vr(MaterialResolution::MJPEG31_MXF_ATOM);
    print_vr(MaterialResolution::MJPEG101_MXF_ATOM);
    print_vr(MaterialResolution::MJPEG101M_MXF_ATOM);
    print_vr(MaterialResolution::MJPEG151S_MXF_ATOM);
    print_vr(MaterialResolution::MJPEG201_MXF_ATOM);
    print_vr(MaterialResolution::IMX30_MXF_ATOM);
    print_vr(MaterialResolution::IMX40_MXF_ATOM);
    print_vr(MaterialResolution::IMX50_MXF_ATOM);
    print_vr(MaterialResolution::IMX30_MXF_1A);
    print_vr(MaterialResolution::IMX40_MXF_1A);
    print_vr(MaterialResolution::IMX50_MXF_1A);
    print_vr(MaterialResolution::DNX36P_MXF_ATOM);
    print_vr(MaterialResolution::DNX120I_MXF_ATOM);
    print_vr(MaterialResolution::DNX185I_MXF_ATOM);
    print_vr(MaterialResolution::DNX120P_MXF_ATOM);
    print_vr(MaterialResolution::DNX185P_MXF_ATOM);
    print_vr(MaterialResolution::XDCAMHD422_RAW);
    //print_vr(MaterialResolution::XDCAMHD422_MXF);
    print_vr(MaterialResolution::XDCAMHD422_MOV);
    print_vr(MaterialResolution::DVD);
    print_vr(MaterialResolution::MPEG4_MOV);
    print_vr(MaterialResolution::MP3);
    print_vr(MaterialResolution::CUTS);
    fprintf(stdout, "\n");

    // FileFormat
    print_ff(FileFormat::RAW);
    print_ff(FileFormat::MXF);
    print_ff(FileFormat::MOV);
    print_ff(FileFormat::MPG);
    fprintf(stdout, "\n");

    // OperationalPattern
    print_op(OperationalPattern::OP_ATOM);
    print_op(OperationalPattern::OP_1A);
    fprintf(stdout, "\n");

    fprintf(stdout, "-- End of section generated by database/src/generate_resolution_sql\n\n");
}

