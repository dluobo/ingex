/*
 * $Id: video_burn_in_timecode.cpp,v 1.2 2011/10/14 09:41:36 john_f Exp $
 *
 * Burn timecode digits into video.
 *
 * Copyright (C) 2005  Stuart Cunningham <stuart_hc@users.sourceforge.net>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 */

#include "Timecode.h"
#include "video_burn_in_timecode.h"

#define max(a,b) (((a)>(b))?(a):(b))
#define min(a,b) (((a)<(b))?(a):(b))

static unsigned char tc_colon[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x05,0xA6,0xFC,0xFC,0xA3,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x05,0xA6,0xFC,0xFC,0xA3,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static unsigned char tc_semicolon[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x05,0xA6,0xFC,0xFC,0xA3,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x05,0xA6,0xFC,0xFC,0xA3,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x06,0xA8,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x00,0x06,0xA8,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x00,0x06,0xA8,0xFF,0xA5,0x00,0x00,
0x00,0x00,0x05,0xA6,0xFC,0xFC,0x80,0x00,0x00,
};

static unsigned char tc_digit[10][18*24] = {
{
0x00,0x00,0x00,0x00,0x00,0x2E,0x99,0xDB,0xF9,0xF9,0xDA,0x99,0x2E,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x81,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x7F,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xBB,0x7E,0x7F,0xBD,0xFF,0xFF,0xFF,0x7C,0x00,0x00,0x00,
0x00,0x00,0x35,0xFD,0xFF,0xFA,0x50,0x00,0x00,0x00,0x00,0x53,0xFB,0xFF,0xFD,0x31,0x00,0x00,
0x00,0x00,0xB6,0xFF,0xFF,0x79,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0xFF,0xFF,0xB2,0x00,0x00,
0x00,0x1B,0xFD,0xFF,0xEF,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0xF1,0xFF,0xFD,0x19,0x00,
0x00,0x64,0xFF,0xFF,0xA3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA6,0xFF,0xFF,0x62,0x00,
0x00,0x9E,0xFF,0xFF,0x67,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x69,0xFF,0xFF,0x9B,0x00,
0x00,0xC7,0xFF,0xFF,0x3D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xC5,0x00,
0x00,0xE4,0xFF,0xFF,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x23,0xFF,0xFF,0xE2,0x00,
0x00,0xF5,0xFF,0xFF,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0xFF,0xFF,0xF4,0x00,
0x00,0xFD,0xFF,0xFF,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0xFF,0xFF,0xFC,0x00,
0x00,0xFD,0xFF,0xFF,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0A,0xFF,0xFF,0xFC,0x00,
0x00,0xF5,0xFF,0xFF,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xFF,0xFF,0xF4,0x00,
0x00,0xE4,0xFF,0xFF,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xFF,0xFF,0xE2,0x00,
0x00,0xC8,0xFF,0xFF,0x3D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0xFF,0xFF,0xC5,0x00,
0x00,0x9E,0xFF,0xFF,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,0xFF,0xFF,0x9C,0x00,
0x00,0x65,0xFF,0xFF,0xA2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA5,0xFF,0xFF,0x63,0x00,
0x00,0x1C,0xFE,0xFF,0xEE,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0xF1,0xFF,0xFD,0x19,0x00,
0x00,0x00,0xB7,0xFF,0xFF,0x77,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0xFF,0xFF,0xB3,0x00,0x00,
0x00,0x00,0x35,0xFE,0xFF,0xF9,0x4E,0x00,0x00,0x00,0x00,0x51,0xFA,0xFF,0xFD,0x32,0x00,0x00,
0x00,0x00,0x00,0x81,0xFF,0xFF,0xFF,0xB9,0x7D,0x7E,0xBB,0xFF,0xFF,0xFF,0x7C,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x83,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0x80,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x2F,0x9C,0xDC,0xF9,0xF9,0xDC,0x9B,0x2F,0x00,0x00,0x00,0x00,0x00,
},
{
0x00,0x00,0x00,0x0E,0x43,0x7B,0xB2,0xE9,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x88,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x9C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x9C,0xEF,0xBB,0x86,0x50,0x1B,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x11,0x01,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x03,0x74,0x74,0x74,0x74,0x74,0xFF,0xFF,0xFF,0x78,0x74,0x74,0x74,0x74,0x2F,0x00,
0x00,0x00,0x08,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x68,0x00,
0x00,0x00,0x08,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x68,0x00,
},
{
0x00,0x00,0x01,0x37,0x7D,0xB5,0xE1,0xF7,0xF7,0xE4,0xB5,0x6F,0x0F,0x00,0x00,0x00,0x00,0x00,
0x00,0x64,0xE2,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x5C,0x00,0x00,0x00,0x00,
0x00,0xA8,0xFF,0xFF,0xFF,0xD5,0x9D,0x7D,0x7B,0x9D,0xE9,0xFF,0xFF,0xFF,0x75,0x00,0x00,0x00,
0x00,0xA8,0xF0,0x89,0x25,0x00,0x00,0x00,0x00,0x00,0x08,0x96,0xFF,0xFF,0xFC,0x30,0x00,0x00,
0x00,0x48,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB0,0xFF,0xFF,0xA0,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x39,0xFF,0xFF,0xE1,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFB,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0xFF,0xFF,0xF4,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x63,0xFF,0xFF,0xCB,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0xD9,0xFF,0xFF,0x79,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8B,0xFF,0xFF,0xEE,0x11,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x57,0xFF,0xFF,0xFF,0x60,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF7,0xFF,0xFF,0xA5,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x37,0xF2,0xFF,0xFF,0xBC,0x07,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0xEF,0xFF,0xFF,0xC7,0x0B,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x30,0xED,0xFF,0xFF,0xD0,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x2E,0xEC,0xFF,0xFF,0xD7,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x2C,0xEB,0xFF,0xFF,0xDD,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x2B,0xEA,0xFF,0xFF,0xE2,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x28,0xE8,0xFF,0xFF,0xE7,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x25,0xE6,0xFF,0xFF,0xEB,0x2A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0xC6,0xFF,0xFF,0xFF,0xA3,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x00,0x00,
0x00,0xD0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,
0x00,0xD0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,
},
{
0x00,0x00,0x24,0x63,0x96,0xC2,0xE3,0xF6,0xFB,0xED,0xCC,0x92,0x34,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xA8,0x10,0x00,0x00,0x00,
0x00,0x00,0xF8,0xFF,0xEE,0xB9,0x91,0x7D,0x7A,0x93,0xD3,0xFF,0xFF,0xFF,0xCC,0x08,0x00,0x00,
0x00,0x00,0x7A,0x30,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x54,0xF6,0xFF,0xFF,0x7A,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6E,0xFF,0xFF,0xD6,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0xFF,0xFF,0xFD,0x02,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFC,0x01,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x31,0xFF,0xFF,0xD1,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xB6,0xFF,0xFF,0x6B,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x19,0x54,0xC9,0xFF,0xFF,0xAE,0x02,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xA4,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDE,0x6C,0x02,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xA4,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xC0,0x67,0x07,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x4A,0x74,0x74,0x78,0x8B,0xBD,0xFC,0xFF,0xFF,0xD6,0x24,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1D,0xB7,0xFF,0xFF,0xE1,0x11,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xC3,0xFF,0xFF,0x85,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0xFF,0xFF,0xD7,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0xFF,0xFF,0xF8,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x16,0xFF,0xFF,0xF6,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4E,0xFF,0xFF,0xD2,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0xCC,0xFF,0xFF,0x87,0x00,
0x00,0x93,0x76,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2B,0xC3,0xFF,0xFF,0xEF,0x18,0x00,
0x00,0xAC,0xFF,0xFE,0xD0,0xA1,0x84,0x77,0x7E,0x97,0xCD,0xFF,0xFF,0xFF,0xF7,0x48,0x00,0x00,
0x00,0xA8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCC,0x32,0x00,0x00,0x00,
0x00,0x04,0x3E,0x80,0xB5,0xDA,0xF2,0xFD,0xFA,0xE8,0xC6,0x8F,0x3F,0x00,0x00,0x00,0x00,0x00,
},
{
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3A,0xFE,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0xD4,0xFF,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0xFF,0xFE,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0xF7,0xFF,0x9E,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xBE,0xFF,0xED,0x14,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x61,0xFF,0xFF,0x65,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x15,0xED,0xFF,0xC7,0x01,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xA4,0xFF,0xFC,0x30,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x46,0xFF,0xFF,0x90,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x09,0xDD,0xFF,0xE5,0x0D,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x89,0xFF,0xFF,0x57,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x2E,0xFB,0xFF,0xBA,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x02,0xC9,0xFF,0xF8,0x25,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x6E,0xFF,0xFF,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x1C,0xF2,0xFF,0xDD,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x83,0xFF,0xFF,0x5D,0x14,0x14,0x14,0x14,0x14,0x14,0x14,0xFF,0xFF,0xFF,0x1B,0x14,0x14,0x07,
0x88,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x5C,
0x88,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x5C,
0x33,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0xFF,0xFF,0xFF,0x65,0x60,0x60,0x22,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,
},
{
0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x88,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x88,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x78,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x3D,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x1E,0x4A,0x60,0x5B,0x40,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xBB,0x3F,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x8C,0x01,0x00,0x00,0x00,
0x00,0x00,0xF4,0xA6,0x60,0x31,0x19,0x17,0x30,0x6E,0xD9,0xFF,0xFF,0xFF,0x84,0x00,0x00,0x00,
0x00,0x00,0x0D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x9C,0xFF,0xFF,0xFC,0x2C,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xC3,0xFF,0xFF,0x97,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4C,0xFF,0xFF,0xDA,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0xFF,0xFF,0xFC,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0xFF,0xFF,0xFF,0x04,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xFF,0xFF,0xF3,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x71,0xFF,0xFF,0xC5,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0xEA,0xFF,0xFF,0x73,0x00,0x00,
0x00,0xB7,0x4A,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xDF,0xFF,0xFF,0xE4,0x0D,0x00,0x00,
0x00,0xFC,0xFF,0xF0,0xB9,0x8F,0x7C,0x7A,0x92,0xD0,0xFF,0xFF,0xFF,0xF3,0x39,0x00,0x00,0x00,
0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCD,0x2D,0x00,0x00,0x00,0x00,
0x00,0x30,0x71,0xA5,0xCE,0xEB,0xFA,0xFD,0xEF,0xCF,0x99,0x46,0x01,0x00,0x00,0x00,0x00,0x00,
},
{
0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x7E,0xC4,0xEC,0xFC,0xF4,0xD7,0xA8,0x67,0x16,0x00,0x00,
0x00,0x00,0x00,0x00,0x02,0x7C,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x8C,0x00,0x00,
0x00,0x00,0x00,0x03,0xA9,0xFF,0xFF,0xFF,0xC8,0x8C,0x77,0x82,0xA9,0xE6,0xFF,0x8C,0x00,0x00,
0x00,0x00,0x00,0x8D,0xFF,0xFF,0xDA,0x37,0x00,0x00,0x00,0x00,0x00,0x01,0x3F,0x51,0x00,0x00,
0x00,0x00,0x3A,0xFE,0xFF,0xE2,0x17,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xBE,0xFF,0xFF,0x4C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x25,0xFF,0xFF,0xD4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x74,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0xAF,0xFF,0xFF,0x42,0x00,0x01,0x33,0x63,0x70,0x61,0x37,0x03,0x00,0x00,0x00,0x00,0x00,
0x00,0xD7,0xFF,0xFF,0x17,0x46,0xD5,0xFF,0xFF,0xFF,0xFF,0xFF,0xE8,0x74,0x03,0x00,0x00,0x00,
0x00,0xF1,0xFF,0xFA,0x69,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBD,0x0A,0x00,0x00,
0x00,0xFC,0xFF,0xFB,0xFC,0xFF,0xCA,0x4D,0x11,0x07,0x2A,0x87,0xFA,0xFF,0xFF,0xA5,0x00,0x00,
0x00,0xFD,0xFF,0xFF,0xFF,0xB8,0x06,0x00,0x00,0x00,0x00,0x00,0x4C,0xFE,0xFF,0xFF,0x3A,0x00,
0x00,0xF5,0xFF,0xFF,0xF9,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9F,0xFF,0xFF,0x9C,0x00,
0x00,0xE2,0xFF,0xFF,0xB8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x42,0xFF,0xFF,0xD8,0x00,
0x00,0xC5,0xFF,0xFF,0x8D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x16,0xFF,0xFF,0xF6,0x00,
0x00,0x9A,0xFF,0xFF,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0xFF,0xFF,0xFC,0x00,
0x00,0x5F,0xFF,0xFF,0x9B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0xFF,0xFF,0xEB,0x00,
0x00,0x16,0xFB,0xFF,0xD9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xFF,0xFF,0xBD,0x00,
0x00,0x00,0xAA,0xFF,0xFF,0x52,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xD6,0xFF,0xFF,0x6D,0x00,
0x00,0x00,0x28,0xF9,0xFF,0xEF,0x42,0x00,0x00,0x00,0x00,0x0E,0xAF,0xFF,0xFF,0xE5,0x0C,0x00,
0x00,0x00,0x00,0x6A,0xFF,0xFF,0xFF,0xBF,0x84,0x7A,0x9C,0xEC,0xFF,0xFF,0xF9,0x40,0x00,0x00,
0x00,0x00,0x00,0x00,0x69,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE6,0x41,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x20,0x8C,0xD2,0xF5,0xFD,0xEC,0xBF,0x6F,0x0C,0x00,0x00,0x00,0x00,
},
{
0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0x00,
0x00,0x00,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0x74,0xF1,0xFF,0xFF,0x95,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2F,0xFF,0xFF,0xFF,0x35,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8E,0xFF,0xFF,0xD4,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xE8,0xFF,0xFF,0x75,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4B,0xFF,0xFF,0xFC,0x19,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAA,0xFF,0xFF,0xB6,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0xF8,0xFF,0xFF,0x56,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x67,0xFF,0xFF,0xEE,0x07,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC6,0xFF,0xFF,0x96,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0xFF,0xFF,0xFF,0x36,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x83,0xFF,0xFF,0xD5,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xE0,0xFF,0xFF,0x76,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0xFF,0xFF,0xFC,0x19,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9F,0xFF,0xFF,0xB7,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0xF3,0xFF,0xFF,0x57,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5D,0xFF,0xFF,0xEF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xBB,0xFF,0xFF,0x97,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0xFD,0xFF,0xFF,0x37,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x79,0xFF,0xFF,0xD6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xD7,0xFF,0xFF,0x77,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x36,0xFF,0xFF,0xFC,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x95,0xFF,0xFF,0xB7,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
},
{
0x00,0x00,0x00,0x00,0x05,0x5A,0xB0,0xE2,0xF7,0xF7,0xE2,0xB0,0x5B,0x05,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x24,0xD0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xD0,0x23,0x00,0x00,0x00,
0x00,0x00,0x10,0xE0,0xFF,0xFF,0xFB,0xAF,0x7E,0x7E,0xB1,0xFC,0xFF,0xFF,0xE0,0x10,0x00,0x00,
0x00,0x00,0x86,0xFF,0xFF,0xEF,0x33,0x00,0x00,0x00,0x00,0x36,0xF0,0xFF,0xFF,0x85,0x00,0x00,
0x00,0x00,0xD9,0xFF,0xFF,0x69,0x00,0x00,0x00,0x00,0x00,0x00,0x6B,0xFF,0xFF,0xD8,0x00,0x00,
0x00,0x01,0xFB,0xFF,0xFF,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x1B,0xFF,0xFF,0xFB,0x01,0x00,
0x00,0x01,0xFD,0xFF,0xFF,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0xFF,0xFF,0xFC,0x01,0x00,
0x00,0x00,0xD6,0xFF,0xFF,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x1A,0xFF,0xFF,0xD4,0x00,0x00,
0x00,0x00,0x78,0xFF,0xFF,0x67,0x00,0x00,0x00,0x00,0x00,0x00,0x69,0xFF,0xFF,0x74,0x00,0x00,
0x00,0x00,0x07,0xC6,0xFF,0xED,0x30,0x00,0x00,0x00,0x00,0x33,0xEF,0xFF,0xC4,0x05,0x00,0x00,
0x00,0x00,0x00,0x0B,0x95,0xFA,0xFB,0xAE,0x7D,0x7D,0xAF,0xFC,0xFA,0x94,0x0A,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x39,0xA8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xA8,0x39,0x00,0x00,0x00,0x00,
0x00,0x00,0x0D,0xAC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAD,0x0D,0x00,0x00,
0x00,0x04,0xC2,0xFF,0xFF,0xEF,0x78,0x29,0x08,0x09,0x2A,0x78,0xEF,0xFF,0xFF,0xC2,0x04,0x00,
0x00,0x6C,0xFF,0xFF,0xE7,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xE8,0xFF,0xFF,0x6B,0x00,
0x00,0xCA,0xFF,0xFF,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x65,0xFF,0xFF,0xC9,0x00,
0x00,0xF6,0xFF,0xFF,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1D,0xFF,0xFF,0xF4,0x00,
0x00,0xFB,0xFF,0xFF,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFA,0x00,
0x00,0xE1,0xFF,0xFF,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x35,0xFF,0xFF,0xE0,0x00,
0x00,0xA7,0xFF,0xFF,0x9D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA2,0xFF,0xFF,0xA5,0x00,
0x00,0x3F,0xFF,0xFF,0xFF,0x81,0x04,0x00,0x00,0x00,0x00,0x06,0x88,0xFF,0xFF,0xFF,0x3D,0x00,
0x00,0x00,0x98,0xFF,0xFF,0xFF,0xE5,0x9C,0x7B,0x7C,0x9D,0xE7,0xFF,0xFF,0xFF,0x94,0x00,0x00,
0x00,0x00,0x02,0x80,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFB,0x7E,0x02,0x00,0x00,
0x00,0x00,0x00,0x00,0x1F,0x80,0xBF,0xE8,0xF8,0xF8,0xE8,0xBF,0x7F,0x1E,0x00,0x00,0x00,0x00,
},
{
0x00,0x00,0x00,0x00,0x08,0x67,0xBA,0xEA,0xFC,0xF4,0xD0,0x8A,0x20,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x34,0xDD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0x68,0x00,0x00,0x00,0x00,
0x00,0x00,0x30,0xF2,0xFF,0xFF,0xF0,0xA0,0x7C,0x86,0xC3,0xFF,0xFF,0xFF,0x69,0x00,0x00,0x00,
0x00,0x05,0xD7,0xFF,0xFF,0xBE,0x14,0x00,0x00,0x00,0x00,0x4D,0xF5,0xFF,0xF9,0x27,0x00,0x00,
0x00,0x5C,0xFF,0xFF,0xE3,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x62,0xFF,0xFF,0xA9,0x00,0x00,
0x00,0xB0,0xFF,0xFF,0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xE1,0xFF,0xFA,0x14,0x00,
0x00,0xE3,0xFF,0xFF,0x2E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9F,0xFF,0xFF,0x5E,0x00,
0x00,0xFB,0xFF,0xFF,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x81,0xFF,0xFF,0x98,0x00,
0x00,0xFB,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0xFF,0xC3,0x00,
0x00,0xE7,0xFF,0xFF,0x2B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9C,0xFF,0xFF,0xE1,0x00,
0x00,0xBA,0xFF,0xFF,0x6D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xDD,0xFF,0xFF,0xF3,0x00,
0x00,0x6C,0xFF,0xFF,0xDC,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x58,0xFF,0xFF,0xFF,0xFC,0x00,
0x00,0x0D,0xE9,0xFF,0xFF,0xB2,0x0D,0x00,0x00,0x00,0x00,0x40,0xF0,0xFF,0xFF,0xFF,0xFB,0x00,
0x00,0x00,0x4A,0xFC,0xFF,0xFF,0xE9,0x93,0x6F,0x78,0xB6,0xFE,0xFF,0xDB,0xF5,0xFF,0xEF,0x00,
0x00,0x00,0x00,0x50,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xD6,0x27,0xFE,0xFF,0xD6,0x00,
0x00,0x00,0x00,0x00,0x16,0x80,0xCF,0xF8,0xFF,0xFA,0xCC,0x70,0x07,0x2B,0xFF,0xFF,0xAD,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x09,0x02,0x00,0x00,0x00,0x64,0xFF,0xFF,0x73,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB7,0xFF,0xFF,0x25,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2E,0xFE,0xFF,0xBD,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0xCE,0xFF,0xFE,0x39,0x00,0x00,
0x00,0x00,0x40,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x2A,0xCA,0xFF,0xFF,0x8D,0x00,0x00,0x00,
0x00,0x00,0x90,0xFF,0xD7,0xA0,0x80,0x76,0x89,0xC0,0xFD,0xFF,0xFF,0xAA,0x03,0x00,0x00,0x00,
0x00,0x00,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x7E,0x02,0x00,0x00,0x00,0x00,
0x00,0x00,0x1E,0x70,0xAE,0xDB,0xF5,0xFD,0xEE,0xC6,0x80,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,
}
};

void setup_tc_digit(int x_pos, int digit, unsigned char *p)
{
	int i,j;
	unsigned char *pd = tc_digit[ digit ];

	// each digit is 18x24 pixels
	for (j = 0; j < 24; j++)
		for (i = 0; i < 18; i++)
			p[j * 199 + x_pos + i] = *pd++;
}

void setup_colon(int x_pos, unsigned char *p)
{
	int i,j;
	unsigned char *pd = tc_colon;

	// the colon is 9x24 pixels
	for (j = 0; j < 24; j++)
		for (i = 0; i < 9; i++)
			p[j * 199 + x_pos + i] = *pd++;
}

void setup_semicolon(int x_pos, unsigned char *p)
{
	int i,j;
	unsigned char *pd = tc_semicolon;

	// the semicolon is 9x24 pixels
	for (j = 0; j < 24; j++)
		for (i = 0; i < 9; i++)
			p[j * 199 + x_pos + i] = *pd++;
}

static void setup_tc_mask(const Ingex::Timecode & timecode, unsigned char *tc_mask)
{
	// timecode is always HH:MM:SS:FF giving a mask 20+20+13+20+20+13+20+20+13+20+20 = 199
	// by 24 pixels high

	setup_tc_digit(0, timecode.Hours() / 10, tc_mask);
	setup_tc_digit(20, timecode.Hours() % 10, tc_mask);
	setup_colon(20+20+2, tc_mask);
	setup_tc_digit(53, timecode.Minutes() / 10, tc_mask);
	setup_tc_digit(73, timecode.Minutes() % 10, tc_mask);
	setup_colon(20+20+13+20+20+2, tc_mask);
	setup_tc_digit(106, timecode.Seconds() / 10, tc_mask);
	setup_tc_digit(126, timecode.Seconds() % 10, tc_mask);
    if (timecode.DropFrame())
    {
        setup_semicolon(20+20+13+20+20+13+20+20+2, tc_mask);
    }
    else
    {
        setup_colon(20+20+13+20+20+13+20+20+2, tc_mask);
    }
	setup_tc_digit(159, timecode.Frames() / 10, tc_mask);
	setup_tc_digit(179, timecode.Frames() % 10, tc_mask);
}

//static const unsigned char		whiteU = 0x80, whiteY = 0xEB, whiteV = 0x80;
static const unsigned char		maskU = 0x80, maskY = 0x10, maskV = 0x80;
//static const unsigned char		blackU = 0x80, blackY = 0x10, blackV = 0x80;

void burn_mask_yuv420(const Ingex::Timecode & timecode, int x_offset, int y_offset,
							int frame_width, int frame_height, unsigned char *frame)
{
	int tc_width = 199, tc_height = 24;
	unsigned char tc_mask[199 * 24] = {0};
	setup_tc_mask(timecode, tc_mask);

	int i,j;
	int m_width = tc_width;
	int m_height = tc_height;
	int y_size = frame_width * frame_height;
	int u_size = y_size / 4;

	for (j = 0; j < m_height; j++)
	{
		for (i = 0; i < m_width; i++)
		{
			int y_idx =	y_offset * frame_width + x_offset + j * frame_width + i;
			int u_idx =	y_size + y_offset/2 * frame_width/2 + x_offset/2 + j/2 * frame_width/2 + i/2;
			int v_idx =	y_size + u_size + y_offset/2 * frame_width/2 + x_offset/2 + j/2 * frame_width/2 + i/2;

			unsigned char m1 = tc_mask[j*m_width+ i];
			double		r1 = m1 / 255.0;

			// Y
			frame[y_idx] = r1 * (maskY - frame[y_idx]) + frame[y_idx];

			if ((i % 2 == 0) && (j % 2 == 0))
			{
				// U V
				frame[u_idx] = r1 * (maskU - frame[u_idx]) + frame[u_idx];
				frame[v_idx] = r1 * (maskV - frame[v_idx]) + frame[v_idx];
			}
		}
	}
}

void burn_mask_yuv422(const Ingex::Timecode & timecode, int x_offset, int y_offset,
							int frame_width, int frame_height, unsigned char *frame)
{
	int tc_width = 199, tc_height = 24;
	unsigned char tc_mask[199 * 24] = {0};
	setup_tc_mask(timecode, tc_mask);

	int i,j;
	int m_width = tc_width;
	int m_height = tc_height;
	int y_size = frame_width * frame_height;
	int u_size = y_size / 2;

	for (j = 0; j < m_height; j++)
	{
		for (i = 0; i < m_width; i++)
		{
			int y_idx =	y_offset * frame_width + x_offset + j * frame_width + i;
			int u_idx =	y_size + y_offset * frame_width/2 + x_offset/2 + j * frame_width/2 + i/2;
			int v_idx =	y_size + u_size + y_offset * frame_width/2 + x_offset/2 + j * frame_width/2 + i/2;

			unsigned char m1 = tc_mask[j*m_width+ i];
			double		r1 = m1 / 255.0;

			// Y
			frame[y_idx] = r1 * (maskY - frame[y_idx]) + frame[y_idx];

			if ((i % 2 == 0))
			{
				// U V
				frame[u_idx] = r1 * (maskU - frame[u_idx]) + frame[u_idx];
				frame[v_idx] = r1 * (maskV - frame[v_idx]) + frame[v_idx];
			}
		}
	}
}

void burn_mask_uyvy(const Ingex::Timecode & timecode, int x_offset, int y_offset,
							int frame_width, int frame_height, unsigned char *frame)
{
	int tc_width = 199, tc_height = 24;
	unsigned char tc_mask[199 * 24] = {0};
	setup_tc_mask(timecode, tc_mask);

	int i,j;
	int m_width = tc_width;
	int m_height = tc_height;

	for (j = 0; j < m_height; j++)
	{
		for (i = 0; i < m_width; i++)
		{
			int idx = y_offset * frame_width + x_offset + j * frame_width + i;

			unsigned char m1 = tc_mask[j*m_width + i];
			double		r1 = m1 / 255.0;

			// Y (U Y V Y)
			frame[idx*2+1] = r1 * (maskY - frame[idx*2+1]) + frame[idx*2+1];

			if ((i % 2 == 0))
			{
				// U
				frame[idx*2] = r1 * (maskU - frame[idx*2]) + frame[idx*2];
				// V
				frame[idx*2+2] = r1 * (maskV - frame[idx*2+2]) + frame[idx*2+2];
			}
		}
	}
}

